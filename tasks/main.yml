---

- name: Install
  tags:
  - install
  block:
  - name: install required packages
    package:
      name: "{{ item }}"
      state: present
    loop:
    - unzip

  - name: Install vault
    import_tasks: install.yml

- name: Configure
  tags:
  - config
  block:
  - name: Configure vault
    import_tasks: configure.yml

  - name: Create systemd Unit File
    template:
      src: vault.systemd.j2
      dest: /usr/lib/systemd/system/vault.service
    notify:
    - systemctl daemon-reload

  - name: Start vault
    systemd:
      name: vault
      state: started
    when: vault_manage_service

- name: Vault API setup
  tags:
  - api
  block:
  - set_fact:
      vault_url: "{% if vault_config.api_addr is defined %}{{ vault_config.api_addr }}{% else %}https://{{ vault_host }}:8200{% endif %}"

  - import_tasks: api/init.yml
    when: vault_auto_init

  - name: Check if Vault is unsealed
    uri:
      url: "{{ vault_url }}/v1/sys/seal-status"
      method: GET
      headers:
        Content-Type: application/json
    run_once: true
    register: vault_status

  - set_fact:
      vault_sealed: "{{ vault_status.json.sealed }}"

  - debug:
      msg: Vault is sealed
    when: vault_sealed

  - set_fact:
      vault_request_token: "{% if root_token is defined %}{{ root_token }}{% else %}{{ vault_token }}{% endif %}"

  - import_tasks: api/secrets.yml
    tags: secrets
    when: not vault_sealed and vault_secrets is defined

  - import_tasks: api/policies.yml
    tags: policies
    when: not vault_sealed and vault_policies is defined



